plugins {
    id 'org.asciidoctor.jvm.convert' version '3.3.2'
}

configurations {
    asciidoctorExt
}

dependencies {
    implementation project(':core')
    implementation project(':chat')
    implementation project(':batch')
    implementation project(':admin')
    //Spring MVC
    implementation 'org.springframework.boot:spring-boot-starter-web'

    //Validation
    implementation 'org.springframework.boot:spring-boot-starter-validation'

    //REST DOCS
    asciidoctorExt 'org.springframework.restdocs:spring-restdocs-asciidoctor'
    testImplementation 'org.springframework.restdocs:spring-restdocs-mockmvc'

    //Spring Security
    implementation 'org.springframework.boot:spring-boot-starter-security'
    testImplementation 'org.springframework.security:spring-security-test'
    implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'

    //JWT
    implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
    implementation 'io.jsonwebtoken:jjwt-impl:0.11.5'
    implementation 'io.jsonwebtoken:jjwt-jackson:0.11.5'

    //Socket
    implementation 'org.springframework.boot:spring-boot-starter-websocket'
    implementation group: 'org.webjars', name: 'sockjs-client', version: '1.5.1'
    implementation group: 'org.webjars', name: 'stomp-websocket', version: '2.3.4'

    // spatial type
    implementation 'org.hibernate:hibernate-spatial:6.3.1.Final'

}

ext { // 전역 변수
    snippetsDir = file('build/generated-snippets')
}

test {
    jvmArgs '-Duser.timezone=Asia/Seoul'
    outputs.dir snippetsDir
    useJUnitPlatform()
}

asciidoctor {
    configurations 'asciidoctorExt'
    baseDirFollowsSourceFile()
    inputs.dir snippetsDir
    dependsOn test
    outputDir file('build/docs/asciidoc')
}

bootJar {
    enabled = true
    dependsOn asciidoctor
    from("${asciidoctor.outputDir}") {
        into "static/docs"
    }
}

version '1.0.1-SNAPSHOT-'+new Date().format("yyyyMMddHHmmss")
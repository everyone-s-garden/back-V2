plugins {
    id 'java'
    id 'org.springframework.boot' version '3.2.0'
    id 'io.spring.dependency-management' version '1.1.4'
    id "org.sonarqube" version "4.4.1.3373"
}

//sonar 설정
sonar {
    properties {
        property "sonar.projectKey", "everyone-s-garden_back-V2"
        property "sonar.organization", "everyone-s-garden"
        property "sonar.host.url", "https://sonarcloud.io"
        property 'sonar.coverage.exclusions', '**/health/**, **/*Request.java, **/*Response.java, **/*Result*.java, **/*Param*.java,  **/*Config*.java, **/*Exception*.java, **/*Info.java, **/*Client.java, **/*Parser.java, **/global/error/**, **/auth/jwt/**, **/*JpaRepository.java, **/global/exception/**, **/*Responses.java'
        property 'sonar.exclusions', '**/*Application*.java, , **/*Parser.java'
    }
}

group = 'com.garden'
version = '0.0.1-SNAPSHOT'

java {
    sourceCompatibility = '17'
}

repositories {
    mavenCentral()
}

// 루트 프로젝트는 jar 파일을 만들 필요가 없기 때문에 false로 설정
bootJar {
    enabled = false
}

tasks.named('test') {
    useJUnitPlatform()
}

compileJava.options.encoding = 'UTF-8'

subprojects {
    group = 'com.garden'
    version = '0.0.1-SNAPSHOT'

    java {
        sourceCompatibility = '17'
    }

    apply plugin: 'java'
    apply plugin: 'java-library' //하위 모듈이 상위 모듈의 라이브러리를 의존할 수 있게 하는 플러그인
    apply plugin: 'io.spring.dependency-management'
    apply plugin: 'org.springframework.boot'
    apply plugin: 'jacoco'
    apply plugin: 'org.sonarqube' //하위 모듈에 전부 소나클라우드 적용

    sonar {
        properties {
            property "sonar.coverage.jacoco.xmlReportPaths", "build/reports/jacoco/test/jacocoTestReport.xml"
        }
    }

    test {
        useJUnitPlatform()
        finalizedBy jacocoTestReport
    }

    jacocoTestReport {
        reports {
            xml.required = true
        }

        afterEvaluate {
            classDirectories.setFrom(files(classDirectories.files.collect {
                fileTree(dir: it, exclude: ['**/*Request.class', '**/*Response.class'])
            }))
        }
    }

    ext {
        set('springCloudVersion', "2023.0.0")
    }

    dependencies {
        implementation 'org.springframework.boot:spring-boot-starter'

        //feign
        implementation 'org.springframework.cloud:spring-cloud-starter-openfeign'

        //circuitbreaker
        implementation 'org.springframework.cloud:spring-cloud-starter-circuitbreaker-resilience4j'

        testImplementation 'org.springframework.boot:spring-boot-starter-test'

        // Lombok
        compileOnly 'org.projectlombok:lombok'
        annotationProcessor 'org.projectlombok:lombok'
    }

    dependencyManagement {
        imports {
            mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
        }
    }

    configurations {
        compileOnly {
            extendsFrom annotationProcessor
        }
        asciidoctorExt
    }

    repositories {
        maven { url "https://repo.osgeo.org/repository/release/" }
        mavenCentral()
    }

    //ide에 코틀린 플러그인이 적용되어 있어 설정함
    tasks.register("prepareKotlinBuildScriptModel") {}
}

project(':api') {
    dependencies {
        implementation project(':core')
        implementation project(':chat')
        implementation project(':batch')
        implementation project(':admin')
    }
}

project(':chat') {
    dependencies {
        implementation project(':core')
    }
}

// batch 모듈은 core 모듈에 의존
project(':batch') {
    dependencies {
        implementation project(':core')
    }
}

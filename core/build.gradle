plugins {
    id 'org.jetbrains.kotlin.jvm' version '2.0.0-Beta2'
}

kotlin {
    jvmToolchain(17)
}

dependencies {
    // JPA
    api 'org.springframework.boot:spring-boot-starter-data-jpa'

    //Fixture monkey
    api 'com.navercorp.fixturemonkey:fixture-monkey:1.0.5'

    // AWS
    implementation platform("software.amazon.awssdk:bom:2.19.1")
    implementation 'software.amazon.awssdk:s3-transfer-manager'

    // spatial type
    implementation 'org.hibernate:hibernate-spatial:6.3.1.Final'

    // apache common
    implementation 'org.apache.commons:commons-lang3:3.14.0'
    implementation 'commons-validator:commons-validator:1.8.0'

    // flyway
    implementation 'org.flywaydb:flyway-core'
    implementation 'org.flywaydb:flyway-mysql'

    // S3(NCP의 Object Storage와도 호환이 됨)
    implementation 'com.amazonaws:aws-java-sdk-s3:1.12.620'

    // Retry
    implementation 'org.springframework.retry:spring-retry:2.0.5'

    // QueryDSL
    implementation 'com.querydsl:querydsl-jpa:5.0.0:jakarta'
    annotationProcessor "com.querydsl:querydsl-apt:${dependencyManagement.importedProperties['querydsl.version']}:jakarta"
    annotationProcessor "jakarta.annotation:jakarta.annotation-api"
    annotationProcessor "jakarta.persistence:jakarta.persistence-api"

    runtimeOnly 'com.mysql:mysql-connector-j'
    runtimeOnly 'com.h2database:h2'

    // Notification
    implementation 'org.springframework.boot:spring-boot-starter-mail'

    // Kotlin
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8"
    implementation "org.jetbrains.kotlin:kotlin-reflect"

    //feign
    api 'org.springframework.cloud:spring-cloud-starter-openfeign'

    //circuitbreaker
    api 'org.springframework.cloud:spring-cloud-starter-circuitbreaker-resilience4j'

    // Test
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'com.willowtreeapps.assertk:assertk:0.25'
    testImplementation 'io.mockk:mockk:1.11.0'
}